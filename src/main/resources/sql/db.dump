--
-- PostgreSQL database dump
--

-- Dumped from database version 11.1 (Debian 11.1-1.pgdg90+1)
-- Dumped by pg_dump version 11.0

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: uuid-ossp; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA public;


--
-- Name: EXTENSION "uuid-ossp"; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION "uuid-ossp" IS 'generate universally unique identifiers (UUIDs)';


--
-- Name: check_score(); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.check_score() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
  result varchar;
BEGIN
  if new.n_score < 60 then
    select row_to_json(new)::varchar into result;
    perform pg_notify('flunk', result);
  end if;
  return new;
END;
$$;


ALTER FUNCTION public.check_score() OWNER TO postgres;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: edu_score; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.edu_score (
    id character varying DEFAULT public.uuid_generate_v4() NOT NULL,
    v_lesson character varying,
    n_score numeric,
    v_name character varying
);


ALTER TABLE public.edu_score OWNER TO postgres;

--
-- Data for Name: edu_score; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.edu_score (id, v_lesson, n_score, v_name) FROM stdin;
a06a2bb4-4cbb-49a0-a2c5-e936c86d1c79	语文	90	小明
\.


--
-- Name: edu_score edu_score_pk; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.edu_score
    ADD CONSTRAINT edu_score_pk PRIMARY KEY (id);


--
-- Name: edu_score trigger_check_score; Type: TRIGGER; Schema: public; Owner: postgres
--

CREATE TRIGGER trigger_check_score AFTER INSERT ON public.edu_score FOR EACH ROW EXECUTE PROCEDURE public.check_score();


--
-- PostgreSQL database dump complete
--

